---
- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true

- name: Install Docker dependencies
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop:
    - apt-transport-https
    - ca-certificates
    - curl

- name: Create /etc/apt/keyrings directory with permissions
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Docker GPG key
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'

- name: Add Docker repository
  ansible.builtin.shell:
    cmd: "echo \
      deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
      {{ ansible_distribution_release }} stable | \
      sudo tee /etc/apt/sources.list.d/docker.list > /dev/null"

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true

- name: Install Docker
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - docker-buildx-plugin
    - docker-compose-plugin

- name: Ensure Docker service is enabled and started
  ansible.builtin.systemd:
    name: docker
    enabled: true
    state: started

- name: Verify Docker installation
  ansible.builtin.command: docker --version
  changed_when: false
  register: docker_version

- name: Display Docker version
  ansible.builtin.debug:
    var: docker_version.stdout_lines

- name: Run Docker hello-world container
  ansible.builtin.command: docker run hello-world
  changed_when: false
  register: hello_world_result

- name: Display hello-world result
  ansible.builtin.debug:
    var: hello_world_result.stdout_lines
